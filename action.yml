# Copyright Â© 2025 Brent Tunnicliff <brent@tunnicliff.dev>

name: 'xcodebuild destination'
description: 'Returns the xcodebuild destination for the input platform. Expects any desired simulator to already available on the machine.'
inputs:
  platform:
    description: "The platform to be used, options are 'iOS', 'macOS', 'tvOS', 'watchOS', 'visionOS'."
    required: true
    type: string
  simulator_version:
    description: "OS Version of simulator to use. Is ignored if platform is 'macOS'."
    required: false
    type: string
outputs:
  destination:
    description: "The destination to be passed into the xcodebuild command."
    value: ${{ steps.destination.outputs.destination }}
runs:
  using: "composite"
  steps:
    - name: Destination
      id: destination
      shell: bash
      env:
        OS_VERSION: ${{ inputs.simulator_version }}
        PLATFORM: ${{ inputs.platform }}
      run: |
        if [[ $PLATFORM == "macOS" ]]; then
          # macOS doesn't use a simulator, so set the DESTINATION directly.
          DESTINATION="platform=macOS"
        elif [[ $PLATFORM == "iOS" || $PLATFORM == "tvOS" || $PLATFORM == "watchOS" || $PLATFORM == "visionOS" ]]; then
          SIMULATOR="$PLATFORM $OS_VERSION"
        else
          echo "Unexpected platform value '$PLATFORM'"
          exit 1
        fi

        # If we need a simulator, query which one to select and define its DESTINATION.
        if [[ $SIMULATOR != "" ]]; then
          # We query to get a specific UUID of a matching simulator to make xcodebuild commands more stable.
          DEVICE_ID=$(xcrun simctl list devices "$SIMULATOR" | grep -m 1 -E -o -i "([0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12})")

          if [[ $DEVICE_ID == "" ]]; then
            # Lets not worry about the added complexity of creating a new simulator.
            echo "No simulators matching '$SIMULATOR' available on machine"
            exit 1
          fi

          DESTINATION="id=$DEVICE_ID"
        fi

        if [[ $DESTINATION != "" ]]; then
          echo $DESTINATION
          echo "destination=$DESTINATION" >> "$GITHUB_OUTPUT"
        else
          echo "DESTINATION missing"
          exit 1
        fi
